name: 'Deploy to Digital Ocean'

on:
  push:
    branches:
      - 'main'

jobs:
  check_user:
    name: check_user
    runs-on: self-hosted
    steps:
      - name: check user
        run: whoami

  tfsec:
    name: tfsec
    runs-on: self-hosted
    timeout-minutes: 10
    steps:
      - name: TFsec Scan
        uses: aquasecurity/tfsec-action@v1.0.2

  terraform:
    name: terraform
    needs: tfsec
    runs-on: self-hosted
    timeout-minutes: 30
    steps:
      - name: "Checkout"
        uses: actions/checkout@v2

      - name: Configuring AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          role-to-assume: ${{ secrets.AWS_ROLE }}
          role-duration-seconds: 1800
          role-session-name: WorkSmarterBlogDeploy
          aws-region: us-east-1

      - name: Terraform Init
        run: |
          terraform init \
            -backend-config "bucket=${{ secrets.BACKEND_S3 }}" \
            -backend-config "region=us-east-1" \
            -backend-config "dynamodb_table=${{ secrets.BACKEND_DYNAMO }}" \
            -backend-config "key=digital_ocean/work-smarter-blog-server.tfstate"
        working-directory: terraform/blog-server

      - name: Create Workspace
        run: terraform workspace new dev || terraform workspace select dev
        continue-on-error: true
        working-directory: terraform/blog-server

      - name: Terraform Plan
        run: |
          terraform plan \
            -var='do_token=${{ secrets.DO_TOKEN }}' \
            -var='ssh_keys=["${{ secrets.SSH_KEY_1 }}"]' \
            -out plan -destroy
        working-directory: terraform/blog-server

      - name: Terraform Apply
        run: terraform apply plan
        working-directory: terraform/blog-server